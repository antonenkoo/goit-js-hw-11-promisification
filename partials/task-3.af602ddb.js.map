{"mappings":"AAEO,IAADA,0BAA4B,SAACC,EAAKC,GACtC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,gBAAkB,SAAAC,GACtB,IAAMC,EAAQR,0BAA0B,IAAK,KAEvCS,EAAaN,KAAKE,SAAW,GAEnC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLJ,EACFE,EAAQ,CAAEG,GAAIP,EAAYO,GAAIN,MAAOA,IAErCI,EAAOL,EAAYO,MAEpBN,OAIDO,WAAa,SAAAC,OAAGF,EAAEE,EAAFF,GAAIN,EAAKQ,EAALR,MACxBS,QAAQC,IAAK,eAAiCC,OAAnBL,EAAG,kBAAsBK,OAANX,EAAM,QAGhDY,SAAW,SAAAN,GACfG,QAAQI,KAAM,gCAAkCF,OAAHL,EAAG,+BAclDR,gBAAgB,CAAEQ,GAAI,GAAIQ,OAAQ,MAAOC,KAAKR,YAAYS,MAAMJ,UAEhEd,gBAAgB,CAAEQ,GAAI,GAAIQ,OAAQ,MAAOC,KAAKR,YAAYS,MAAMJ,UAEhEd,gBAAgB,CAAEQ,GAAI,GAAIQ,OAAQ,KAAMC,KAAKR,YAAYS,MAAMJ,UAE/Dd,gBAAgB,CAAEQ,GAAI,GAAIQ,OAAQ,MAAOC,KAAKR,YAAYS,MAAMJ","sources":["src/js/task-3.js"],"sourcesContent":["// Задание 3\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  const canProcess = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (canProcess) {\n        resolve({ id: transaction.id, delay: delay });\n      } else {\n        reject(transaction.id);\n      }\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, delay }) => {\n  console.log(`Transaction ${id} processed in ${delay}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работало так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n\n/*\n * Сейчас работает так\n */\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","canProcess","Promise","resolve","reject","setTimeout","id","logSuccess","param","console","log","concat","logError","warn","amount","then","catch"],"version":3,"file":"task-3.af602ddb.js.map"}